{
  "id": null,
  "title": "PROD: Automation & Service Performance Dashboard",
  "tags": ["automation", "service-performance", "reliability-monitoring", "home-assistant", "ha-ingestor", "production", "prod"],
  "style": "dark",
  "timezone": "browser",
  "refresh": "30s",
  "time": {"from": "now-24h", "to": "now"},
  "panels": [
    {
      "id": 1,
      "title": "Automation Execution Count (Last 24h)",
      "type": "stat",
      "gridPos": {"h": 4, "w": 6, "x": 0, "y": 0},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"automation\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> count() |> yield(name: \"Automation Executions\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "thresholds": {
            "steps": [
              {"color": "red", "value": 0},
              {"color": "yellow", "value": 50},
              {"color": "green", "value": 200}
            ]
          },
          "unit": "short",
          "displayName": "Executions",
          "custom": {
            "displayMode": "color-background"
          }
        }
      }
    },
    {
      "id": 2,
      "title": "Service Call Volume (Last 24h)",
      "type": "stat",
      "gridPos": {"h": 4, "w": 6, "x": 6, "y": 0},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"service\") |> count() |> yield(name: \"Service Calls\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "thresholds"},
          "thresholds": {
            "steps": [
              {"color": "green", "value": 0},
              {"color": "yellow", "value": 100},
              {"color": "red", "value": 500}
            ]
          },
          "unit": "short",
          "displayName": "Service Calls",
          "custom": {
            "displayMode": "color-background"
          }
        }
      }
    },
    {
      "id": 3,
      "title": "Active Automations (Last Hour)",
      "type": "stat",
      "gridPos": {"h": 4, "w": 6, "x": 12, "y": 0},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"automation\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> group(columns: [\"entity_id\"]) |> count() |> yield(name: \"Active Automations\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "unit": "short",
          "displayName": "Active Count",
          "custom": {
            "displayMode": "color-background"
          }
        }
      }
    },
    {
      "id": 4,
      "title": "Automation Execution Frequency (Last 24h)",
      "type": "timeseries",
      "gridPos": {"h": 8, "w": 24, "x": 0, "y": 4},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"automation\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> aggregateWindow(every: 1h, fn: count, createEmpty: false) |> yield(name: \"Hourly Executions\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "drawStyle": "line",
            "lineInterpolation": "smooth",
            "fillOpacity": 20,
            "gradientMode": "scheme"
          },
          "unit": "short"
        }
      },
      "options": {
        "legend": {
          "displayMode": "visible",
          "placement": "bottom"
        }
      }
    },
    {
      "id": 5,
      "title": "Top Service Usage (Last 24h)",
      "type": "table",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 12},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"service\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> group(columns: [\"service\"]) |> count() |> sort(columns: [\"_value\"], desc: true) |> limit(n: 20) |> yield(name: \"Service Usage\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "custom": {
            "displayMode": "color-background"
          }
        },
        "overrides": [
          {
            "matcher": {
              "id": "byName",
              "options": "_value"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Usage Count"
              }
            ]
          },
          {
            "matcher": {
              "id": "byName",
              "options": "service"
            },
            "properties": [
              {
                "id": "displayName",
                "value": "Service Name"
              }
            ]
          }
        ]
      }
    },
    {
      "id": 6,
      "title": "Automation Performance by Type (Last 24h)",
      "type": "piechart",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 12},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"automation\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> group(columns: [\"entity_id\"]) |> count() |> sort(columns: [\"_value\"], desc: true) |> limit(n: 15) |> yield(name: \"Automation Activity\")",
          "refId": "A"
        }
      ],
      "options": {
        "legend": {
          "displayMode": "visible",
          "placement": "bottom"
        },
        "pieType": "pie",
        "reduceOptions": {
          "calcs": ["lastNotNull"],
          "fields": "",
          "values": false
        }
      }
    },
    {
      "id": 7,
      "title": "Service Response Time Analysis (Last 24h)",
      "type": "barchart",
      "gridPos": {"h": 8, "w": 12, "x": 0, "y": 20},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"service\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> group(columns: [\"service\"]) |> count() |> sort(columns: [\"_value\"], desc: true) |> limit(n: 15) |> yield(name: \"Service Activity\")",
          "refId": "A"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "custom": {
            "fillOpacity": 80
          }
        }
      }
    },
    {
      "id": 8,
      "title": "Automation & Service Health Summary",
      "type": "stat",
      "gridPos": {"h": 8, "w": 12, "x": 12, "y": 20},
      "targets": [
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"automation\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> count() |> yield(name: \"Recent Automations\")",
          "refId": "A"
        },
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -1h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"service\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> count() |> yield(name: \"Recent Services\")",
          "refId": "B"
        },
        {
          "query": "from(bucket: \"ha_events\") |> range(start: -24h) |> filter(fn: (r) => r[\"_measurement\"] =~ /ha_/) |> filter(fn: (r) => r[\"domain\"] == \"automation\") |> filter(fn: (r) => r[\"_field\"] == \"state\") |> group(columns: [\"entity_id\"]) |> count() |> yield(name: \"Unique Automations\")",
          "refId": "C"
        }
      ],
      "fieldConfig": {
        "defaults": {
          "color": {"mode": "palette-classic"},
          "unit": "short",
          "custom": {
            "displayMode": "color-background"
          }
        }
      }
    }
  ]
}
