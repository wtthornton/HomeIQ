# Production Docker Compose Configuration
# Enhanced orchestration with resource limits, security, and production optimizations

services:
  influxdb:
    image: influxdb:2.7
    container_name: ha-ingestor-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_DB_HTTP_LOG_ENABLED=false
      - INFLUXDB_LOGGING_LEVEL=warn
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
      - influxdb_logs:/var/log/influxdb
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '1.0'
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
      - /var/tmp
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  websocket-ingestion:
    build:
      context: ./services/websocket-ingestion
      dockerfile: Dockerfile
    container_name: ha-ingestor-websocket
    restart: unless-stopped
    ports:
      - "8001:8001"
    environment:
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - WEBSOCKET_INGESTION_PORT=8001
      - ENABLE_HOME_ASSISTANT=true
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - MAX_WORKERS=${MAX_WORKERS:-10}
      - PROCESSING_RATE_LIMIT=${PROCESSING_RATE_LIMIT:-1000}
      - BATCH_SIZE=${BATCH_SIZE:-100}
      - BATCH_TIMEOUT=${BATCH_TIMEOUT:-5.0}
      - MAX_MEMORY_MB=${MAX_MEMORY_MB:-1024}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.5'
        reservations:
          memory: 128M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
    volumes:
      - websocket_logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  enrichment-pipeline:
    build:
      context: .
      dockerfile: services/enrichment-pipeline/Dockerfile
    container_name: ha-ingestor-enrichment
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - WEATHER_API_URL=${WEATHER_API_URL:-https://api.openweathermap.org/data/2.5}
      - WEATHER_ENRICHMENT_ENABLED=${WEATHER_ENRICHMENT_ENABLED:-true}
      - WEATHER_DEFAULT_LOCATION=${WEATHER_DEFAULT_LOCATION:-London,UK}
      - PROCESSING_BATCH_SIZE=${PROCESSING_BATCH_SIZE:-50}
      - PROCESSING_INTERVAL_SECONDS=${PROCESSING_INTERVAL_SECONDS:-30}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    volumes:
      - enrichment_logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  weather-api:
    build:
      context: ./services/weather-api
      dockerfile: Dockerfile
    container_name: ha-ingestor-weather
    restart: unless-stopped
    environment:
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - WEATHER_API_URL=${WEATHER_API_URL:-https://api.openweathermap.org/data/2.5}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - ENABLE_WEATHER_API=${ENABLE_WEATHER_API:-true}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - WEATHER_API_PORT=8001
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    volumes:
      - weather_logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  admin-api:
    build:
      context: ./services/admin-api
      dockerfile: Dockerfile
    container_name: ha-ingestor-admin
    restart: unless-stopped
    ports:
      - "8003:8004"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - API_HOST=0.0.0.0
      - API_PORT=8004
      - ENABLE_AUTH=${ENABLE_AUTH:-true}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - WEBSOCKET_INGESTION_URL=http://websocket-ingestion:8001
      - ENRICHMENT_PIPELINE_URL=http://enrichment-pipeline:8002
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      - CORS_METHODS=${CORS_METHODS:-GET,POST,PUT,DELETE}
      - CORS_HEADERS=${CORS_HEADERS:-*}
    depends_on:
      influxdb:
        condition: service_healthy
      enrichment-pipeline:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    volumes:
      - admin_logs:/app/logs
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  data-retention:
    build:
      context: ./services/data-retention
      dockerfile: Dockerfile
    container_name: ha-ingestor-data-retention
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - CLEANUP_INTERVAL_HOURS=${CLEANUP_INTERVAL_HOURS:-24}
      - MONITORING_INTERVAL_MINUTES=${MONITORING_INTERVAL_MINUTES:-5}
      - COMPRESSION_INTERVAL_HOURS=${COMPRESSION_INTERVAL_HOURS:-24}
      - BACKUP_INTERVAL_HOURS=${BACKUP_INTERVAL_HOURS:-24}
      - BACKUP_DIR=${BACKUP_DIR:-/backups}
      - RETENTION_POLICY_DAYS=${RETENTION_POLICY_DAYS:-365}
      - COMPRESSION_ENABLED=${COMPRESSION_ENABLED:-true}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - data_retention_backups:/backups
      - data_retention_logs:/app/logs
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
        reservations:
          memory: 512M
          cpus: '0.5'
    security_opt:
      - no-new-privileges:true
    read_only: false
    tmpfs:
      - /tmp
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  health-dashboard:
    build:
      context: ./services/health-dashboard
      dockerfile: Dockerfile
    container_name: ha-ingestor-dashboard
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=${DASHBOARD_API_BASE_URL:-http://localhost:8003/api/v1}
      - VITE_ENVIRONMENT=${ENVIRONMENT:-production}
    networks:
      - ha-ingestor-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'
        reservations:
          memory: 128M
          cpus: '0.1'
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
      - /var/cache/nginx
      - /var/run
    volumes:
      - dashboard_logs:/var/log/nginx
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  influxdb_data:
    driver: local
  influxdb_config:
    driver: local
  influxdb_logs:
    driver: local
  websocket_logs:
    driver: local
  enrichment_logs:
    driver: local
  weather_logs:
    driver: local
  admin_logs:
    driver: local
  data_retention_backups:
    driver: local
  data_retention_logs:
    driver: local
  dashboard_logs:
    driver: local

networks:
  ha-ingestor-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
    driver_opts:
      com.docker.network.bridge.name: ha-ingestor-br
      com.docker.network.bridge.enable_icc: "true"
      com.docker.network.bridge.enable_ip_masquerade: "true"
      com.docker.network.bridge.host_binding_ipv4: "0.0.0.0"