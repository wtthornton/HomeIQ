<testsuites id="" name="" tests="30" failures="22" skipped="0" errors="0" time="60.71266">
<testsuite name="system-health.spec.ts" timestamp="2025-10-25T08:46:18.176Z" hostname="docker-chromium" tests="6" failures="6" skipped="0" time="5.837" errors="0">
<testcase name="System Health Tests › All services are healthy and responding" classname="system-health.spec.ts" time="1.052">
<failure message="system-health.spec.ts:18:7 All services are healthy and responding" type="FAILURE">
<![CDATA[  [docker-chromium] › system-health.spec.ts:18:7 › System Health Tests › All services are healthy and responding 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle
      14 |     // Additional wait for React to hydrate
    > 15 |     await page.waitForTimeout(2000);
         |                ^
      16 |   });
      17 |
      18 |   test('All services are healthy and responding', async ({ page }) => {
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:15:16
]]>
</failure>
</testcase>
<testcase name="System Health Tests › Health dashboard displays system status correctly" classname="system-health.spec.ts" time="0.844">
<failure message="system-health.spec.ts:36:7 Health dashboard displays system status correctly" type="FAILURE">
<![CDATA[  [docker-chromium] › system-health.spec.ts:36:7 › System Health Tests › Health dashboard displays system status correctly 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle
      14 |     // Additional wait for React to hydrate
    > 15 |     await page.waitForTimeout(2000);
         |                ^
      16 |   });
      17 |
      18 |   test('All services are healthy and responding', async ({ page }) => {
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:15:16
]]>
</failure>
</testcase>
<testcase name="System Health Tests › Statistics endpoint returns valid data" classname="system-health.spec.ts" time="0.823">
<failure message="system-health.spec.ts:52:7 Statistics endpoint returns valid data" type="FAILURE">
<![CDATA[  [docker-chromium] › system-health.spec.ts:52:7 › System Health Tests › Statistics endpoint returns valid data 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle
      14 |     // Additional wait for React to hydrate
    > 15 |     await page.waitForTimeout(2000);
         |                ^
      16 |   });
      17 |
      18 |   test('All services are healthy and responding', async ({ page }) => {
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:15:16
]]>
</failure>
</testcase>
<testcase name="System Health Tests › Recent events endpoint returns data" classname="system-health.spec.ts" time="0.989">
<failure message="system-health.spec.ts:63:7 Recent events endpoint returns data" type="FAILURE">
<![CDATA[  [docker-chromium] › system-health.spec.ts:63:7 › System Health Tests › Recent events endpoint returns data 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle
      14 |     // Additional wait for React to hydrate
    > 15 |     await page.waitForTimeout(2000);
         |                ^
      16 |   });
      17 |
      18 |   test('All services are healthy and responding', async ({ page }) => {
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:15:16
]]>
</failure>
</testcase>
<testcase name="System Health Tests › WebSocket connection establishes successfully" classname="system-health.spec.ts" time="1.04">
<failure message="system-health.spec.ts:79:7 WebSocket connection establishes successfully" type="FAILURE">
<![CDATA[  [docker-chromium] › system-health.spec.ts:79:7 › System Health Tests › WebSocket connection establishes successfully 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle
      14 |     // Additional wait for React to hydrate
    > 15 |     await page.waitForTimeout(2000);
         |                ^
      16 |   });
      17 |
      18 |   test('All services are healthy and responding', async ({ page }) => {
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:15:16
]]>
</failure>
</testcase>
<testcase name="System Health Tests › Error handling works correctly when services are down" classname="system-health.spec.ts" time="1.089">
<failure message="system-health.spec.ts:90:7 Error handling works correctly when services are down" type="FAILURE">
<![CDATA[  [docker-chromium] › system-health.spec.ts:90:7 › System Health Tests › Error handling works correctly when services are down 

    Error: page.waitForTimeout: Target page, context or browser has been closed

      13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle
      14 |     // Additional wait for React to hydrate
    > 15 |     await page.waitForTimeout(2000);
         |                ^
      16 |   });
      17 |
      18 |   test('All services are healthy and responding', async ({ page }) => {
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:15:16
]]>
</failure>
</testcase>
</testsuite>
<testsuite name="system-health.spec.ts" timestamp="2025-10-25T08:46:18.176Z" hostname="docker-firefox" tests="6" failures="4" skipped="0" time="104.545" errors="0">
<testcase name="System Health Tests › All services are healthy and responding" classname="system-health.spec.ts" time="11.782">
</testcase>
<testcase name="System Health Tests › Health dashboard displays system status correctly" classname="system-health.spec.ts" time="18.806">
<failure message="system-health.spec.ts:36:7 Health dashboard displays system status correctly" type="FAILURE">
<![CDATA[  [docker-firefox] › system-health.spec.ts:36:7 › System Health Tests › Health dashboard displays system status correctly 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="health-card"]') to be visible


      39 |     
      40 |     // Wait for health data to load
    > 41 |     await page.waitForSelector('[data-testid="health-card"]', { timeout: 10000 });
         |                ^
      42 |     
      43 |     // Verify health indicators are present
      44 |     const healthCards = page.locator('[data-testid="health-card"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:41:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Statistics endpoint returns valid data" classname="system-health.spec.ts" time="19.986">
<failure message="system-health.spec.ts:52:7 Statistics endpoint returns valid data" type="FAILURE">
<![CDATA[  [docker-firefox] › system-health.spec.ts:52:7 › System Health Tests › Statistics endpoint returns valid data 

    TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.
    Call log:
      - → GET http://localhost:8003/api/v1/stats
        - user-agent: Playwright-E2E-Tests
        - accept: application/json, text/plain, */*
        - accept-encoding: gzip,deflate,br


      51 |
      52 |   test('Statistics endpoint returns valid data', async ({ page }) => {
    > 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');
         |                                              ^
      54 |     expect(statsResponse.status()).toBe(200);
      55 |     
      56 |     const statsData = await statsResponse.json();
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:53:46

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Recent events endpoint returns data" classname="system-health.spec.ts" time="11.443">
</testcase>
<testcase name="System Health Tests › WebSocket connection establishes successfully" classname="system-health.spec.ts" time="21.381">
<failure message="system-health.spec.ts:79:7 WebSocket connection establishes successfully" type="FAILURE">
<![CDATA[  [docker-firefox] › system-health.spec.ts:79:7 › System Health Tests › WebSocket connection establishes successfully 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="websocket-status"]') to be visible


      81 |     
      82 |     // Wait for WebSocket connection indicator
    > 83 |     await page.waitForSelector('[data-testid="websocket-status"]', { timeout: 10000 });
         |                ^
      84 |     
      85 |     // Check connection status
      86 |     const connectionStatus = page.locator('[data-testid="websocket-status"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:83:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Error handling works correctly when services are down" classname="system-health.spec.ts" time="21.147">
<failure message="system-health.spec.ts:90:7 Error handling works correctly when services are down" type="FAILURE">
<![CDATA[  [docker-firefox] › system-health.spec.ts:90:7 › System Health Tests › Error handling works correctly when services are down 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="error-state"]') to be visible


       98 |     
       99 |     // Wait for error state to appear
    > 100 |     await page.waitForSelector('[data-testid="error-state"]', { timeout: 10000 });
          |                ^
      101 |     
      102 |     // Verify error message is displayed
      103 |     const errorMessage = page.locator('[data-testid="error-message"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:100:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="system-health.spec.ts" timestamp="2025-10-25T08:46:18.176Z" hostname="docker-webkit" tests="6" failures="4" skipped="0" time="69.927" errors="0">
<testcase name="System Health Tests › All services are healthy and responding" classname="system-health.spec.ts" time="3.714">
</testcase>
<testcase name="System Health Tests › Health dashboard displays system status correctly" classname="system-health.spec.ts" time="13.911">
<failure message="system-health.spec.ts:36:7 Health dashboard displays system status correctly" type="FAILURE">
<![CDATA[  [docker-webkit] › system-health.spec.ts:36:7 › System Health Tests › Health dashboard displays system status correctly 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="health-card"]') to be visible


      39 |     
      40 |     // Wait for health data to load
    > 41 |     await page.waitForSelector('[data-testid="health-card"]', { timeout: 10000 });
         |                ^
      42 |     
      43 |     // Verify health indicators are present
      44 |     const healthCards = page.locator('[data-testid="health-card"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:41:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Statistics endpoint returns valid data" classname="system-health.spec.ts" time="18.796">
<failure message="system-health.spec.ts:52:7 Statistics endpoint returns valid data" type="FAILURE">
<![CDATA[  [docker-webkit] › system-health.spec.ts:52:7 › System Health Tests › Statistics endpoint returns valid data 

    TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.
    Call log:
      - → GET http://localhost:8003/api/v1/stats
        - user-agent: Playwright-E2E-Tests
        - accept: application/json, text/plain, */*
        - accept-encoding: gzip,deflate,br


      51 |
      52 |   test('Statistics endpoint returns valid data', async ({ page }) => {
    > 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');
         |                                              ^
      54 |     expect(statsResponse.status()).toBe(200);
      55 |     
      56 |     const statsData = await statsResponse.json();
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:53:46

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Recent events endpoint returns data" classname="system-health.spec.ts" time="3.702">
</testcase>
<testcase name="System Health Tests › WebSocket connection establishes successfully" classname="system-health.spec.ts" time="14.772">
<failure message="system-health.spec.ts:79:7 WebSocket connection establishes successfully" type="FAILURE">
<![CDATA[  [docker-webkit] › system-health.spec.ts:79:7 › System Health Tests › WebSocket connection establishes successfully 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="websocket-status"]') to be visible


      81 |     
      82 |     // Wait for WebSocket connection indicator
    > 83 |     await page.waitForSelector('[data-testid="websocket-status"]', { timeout: 10000 });
         |                ^
      84 |     
      85 |     // Check connection status
      86 |     const connectionStatus = page.locator('[data-testid="websocket-status"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:83:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Error handling works correctly when services are down" classname="system-health.spec.ts" time="15.032">
<failure message="system-health.spec.ts:90:7 Error handling works correctly when services are down" type="FAILURE">
<![CDATA[  [docker-webkit] › system-health.spec.ts:90:7 › System Health Tests › Error handling works correctly when services are down 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="error-state"]') to be visible


       98 |     
       99 |     // Wait for error state to appear
    > 100 |     await page.waitForSelector('[data-testid="error-state"]', { timeout: 10000 });
          |                ^
      101 |     
      102 |     // Verify error message is displayed
      103 |     const errorMessage = page.locator('[data-testid="error-message"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:100:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="system-health.spec.ts" timestamp="2025-10-25T08:46:18.176Z" hostname="docker-mobile-chrome" tests="6" failures="4" skipped="0" time="65.174" errors="0">
<testcase name="System Health Tests › All services are healthy and responding" classname="system-health.spec.ts" time="3.185">
</testcase>
<testcase name="System Health Tests › Health dashboard displays system status correctly" classname="system-health.spec.ts" time="13.094">
<failure message="system-health.spec.ts:36:7 Health dashboard displays system status correctly" type="FAILURE">
<![CDATA[  [docker-mobile-chrome] › system-health.spec.ts:36:7 › System Health Tests › Health dashboard displays system status correctly 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="health-card"]') to be visible


      39 |     
      40 |     // Wait for health data to load
    > 41 |     await page.waitForSelector('[data-testid="health-card"]', { timeout: 10000 });
         |                ^
      42 |     
      43 |     // Verify health indicators are present
      44 |     const healthCards = page.locator('[data-testid="health-card"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:41:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Statistics endpoint returns valid data" classname="system-health.spec.ts" time="18.02">
<failure message="system-health.spec.ts:52:7 Statistics endpoint returns valid data" type="FAILURE">
<![CDATA[  [docker-mobile-chrome] › system-health.spec.ts:52:7 › System Health Tests › Statistics endpoint returns valid data 

    TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.
    Call log:
      - → GET http://localhost:8003/api/v1/stats
        - user-agent: Playwright-E2E-Tests
        - accept: application/json, text/plain, */*
        - accept-encoding: gzip,deflate,br


      51 |
      52 |   test('Statistics endpoint returns valid data', async ({ page }) => {
    > 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');
         |                                              ^
      54 |     expect(statsResponse.status()).toBe(200);
      55 |     
      56 |     const statsData = await statsResponse.json();
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:53:46

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Recent events endpoint returns data" classname="system-health.spec.ts" time="3.7">
</testcase>
<testcase name="System Health Tests › WebSocket connection establishes successfully" classname="system-health.spec.ts" time="13.611">
<failure message="system-health.spec.ts:79:7 WebSocket connection establishes successfully" type="FAILURE">
<![CDATA[  [docker-mobile-chrome] › system-health.spec.ts:79:7 › System Health Tests › WebSocket connection establishes successfully 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="websocket-status"]') to be visible


      81 |     
      82 |     // Wait for WebSocket connection indicator
    > 83 |     await page.waitForSelector('[data-testid="websocket-status"]', { timeout: 10000 });
         |                ^
      84 |     
      85 |     // Check connection status
      86 |     const connectionStatus = page.locator('[data-testid="websocket-status"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:83:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Error handling works correctly when services are down" classname="system-health.spec.ts" time="13.564">
<failure message="system-health.spec.ts:90:7 Error handling works correctly when services are down" type="FAILURE">
<![CDATA[  [docker-mobile-chrome] › system-health.spec.ts:90:7 › System Health Tests › Error handling works correctly when services are down 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="error-state"]') to be visible


       98 |     
       99 |     // Wait for error state to appear
    > 100 |     await page.waitForSelector('[data-testid="error-state"]', { timeout: 10000 });
          |                ^
      101 |     
      102 |     // Verify error message is displayed
      103 |     const errorMessage = page.locator('[data-testid="error-message"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:100:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
<testsuite name="system-health.spec.ts" timestamp="2025-10-25T08:46:18.176Z" hostname="docker-mobile-safari" tests="6" failures="4" skipped="0" time="67.729" errors="0">
<testcase name="System Health Tests › All services are healthy and responding" classname="system-health.spec.ts" time="3.946">
</testcase>
<testcase name="System Health Tests › Health dashboard displays system status correctly" classname="system-health.spec.ts" time="14.175">
<failure message="system-health.spec.ts:36:7 Health dashboard displays system status correctly" type="FAILURE">
<![CDATA[  [docker-mobile-safari] › system-health.spec.ts:36:7 › System Health Tests › Health dashboard displays system status correctly 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="health-card"]') to be visible


      39 |     
      40 |     // Wait for health data to load
    > 41 |     await page.waitForSelector('[data-testid="health-card"]', { timeout: 10000 });
         |                ^
      42 |     
      43 |     // Verify health indicators are present
      44 |     const healthCards = page.locator('[data-testid="health-card"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:41:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Statistics endpoint returns valid data" classname="system-health.spec.ts" time="18.1">
<failure message="system-health.spec.ts:52:7 Statistics endpoint returns valid data" type="FAILURE">
<![CDATA[  [docker-mobile-safari] › system-health.spec.ts:52:7 › System Health Tests › Statistics endpoint returns valid data 

    TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.
    Call log:
      - → GET http://localhost:8003/api/v1/stats
        - user-agent: Playwright-E2E-Tests
        - accept: application/json, text/plain, */*
        - accept-encoding: gzip,deflate,br


      51 |
      52 |   test('Statistics endpoint returns valid data', async ({ page }) => {
    > 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');
         |                                              ^
      54 |     expect(statsResponse.status()).toBe(200);
      55 |     
      56 |     const statsData = await statsResponse.json();
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:53:46

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Recent events endpoint returns data" classname="system-health.spec.ts" time="3.836">
</testcase>
<testcase name="System Health Tests › WebSocket connection establishes successfully" classname="system-health.spec.ts" time="13.737">
<failure message="system-health.spec.ts:79:7 WebSocket connection establishes successfully" type="FAILURE">
<![CDATA[  [docker-mobile-safari] › system-health.spec.ts:79:7 › System Health Tests › WebSocket connection establishes successfully 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="websocket-status"]') to be visible


      81 |     
      82 |     // Wait for WebSocket connection indicator
    > 83 |     await page.waitForSelector('[data-testid="websocket-status"]', { timeout: 10000 });
         |                ^
      84 |     
      85 |     // Check connection status
      86 |     const connectionStatus = page.locator('[data-testid="websocket-status"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:83:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\error-context.md]]
]]>
</system-out>
</testcase>
<testcase name="System Health Tests › Error handling works correctly when services are down" classname="system-health.spec.ts" time="13.935">
<failure message="system-health.spec.ts:90:7 Error handling works correctly when services are down" type="FAILURE">
<![CDATA[  [docker-mobile-safari] › system-health.spec.ts:90:7 › System Health Tests › Error handling works correctly when services are down 

    TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.
    Call log:
      - waiting for locator('[data-testid="error-state"]') to be visible


       98 |     
       99 |     // Wait for error state to appear
    > 100 |     await page.waitForSelector('[data-testid="error-state"]', { timeout: 10000 });
          |                ^
      101 |     
      102 |     // Verify error message is displayed
      103 |     const errorMessage = page.locator('[data-testid="error-message"]');
        at C:\cursor\ha-ingestor\tests\e2e\system-health.spec.ts:100:16

    attachment #1: screenshot (image/png) ──────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\test-failed-1.png
    ────────────────────────────────────────────────────────────────────────────────────────────────

    attachment #2: video (video/webm) ──────────────────────────────────────────────────────────────
    test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\video.webm
    ────────────────────────────────────────────────────────────────────────────────────────────────

    Error Context: test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\error-context.md
]]>
</failure>
<system-out>
<![CDATA[
[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\test-failed-1.png]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\video.webm]]

[[ATTACHMENT|..\tests\e2e\test-results\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\error-context.md]]
]]>
</system-out>
</testcase>
</testsuite>
</testsuites>