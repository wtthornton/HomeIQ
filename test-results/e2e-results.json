{
  "config": {
    "configFile": "C:\\cursor\\ha-ingestor\\tests\\e2e\\docker-deployment.config.ts",
    "rootDir": "C:/cursor/ha-ingestor/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": true,
    "globalSetup": "C:\\cursor\\ha-ingestor\\tests\\e2e\\docker-global-setup.ts",
    "globalTeardown": "C:\\cursor\\ha-ingestor\\tests\\e2e\\docker-global-teardown.ts",
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 10
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "../../test-results/e2e-html-report"
        }
      ],
      [
        "json",
        {
          "outputFile": "../../test-results/e2e-results.json"
        }
      ],
      [
        "junit",
        {
          "outputFile": "../../test-results/e2e-results.xml"
        }
      ],
      [
        "list",
        null
      ],
      [
        "github",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "C:/cursor/ha-ingestor/tests/e2e/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 10
        },
        "id": "docker-chromium",
        "name": "docker-chromium",
        "testDir": "C:/cursor/ha-ingestor/tests/e2e",
        "testIgnore": [
          "**/node_modules/**",
          "**/dist/**",
          "**/coverage/**"
        ],
        "testMatch": [
          "**/system-health.spec.ts",
          "**/dashboard-functionality.spec.ts",
          "**/monitoring-screen.spec.ts",
          "**/settings-screen.spec.ts",
          "**/visual-regression.spec.ts",
          "**/integration.spec.ts",
          "**/performance.spec.ts",
          "**/api-endpoints.spec.ts",
          "**/frontend-ui-comprehensive.spec.ts",
          "**/integration-performance-enhanced.spec.ts",
          "**/dashboard-data-loading.spec.ts",
          "**/error-handling-comprehensive.spec.ts",
          "**/user-journey-complete.spec.ts",
          "**/cross-service-integration.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/cursor/ha-ingestor/tests/e2e/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 10
        },
        "id": "docker-firefox",
        "name": "docker-firefox",
        "testDir": "C:/cursor/ha-ingestor/tests/e2e",
        "testIgnore": [
          "**/node_modules/**",
          "**/dist/**",
          "**/coverage/**"
        ],
        "testMatch": [
          "**/system-health.spec.ts",
          "**/dashboard-functionality.spec.ts",
          "**/monitoring-screen.spec.ts",
          "**/settings-screen.spec.ts",
          "**/visual-regression.spec.ts",
          "**/integration.spec.ts",
          "**/performance.spec.ts",
          "**/api-endpoints.spec.ts",
          "**/frontend-ui-comprehensive.spec.ts",
          "**/integration-performance-enhanced.spec.ts",
          "**/dashboard-data-loading.spec.ts",
          "**/error-handling-comprehensive.spec.ts",
          "**/user-journey-complete.spec.ts",
          "**/cross-service-integration.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/cursor/ha-ingestor/tests/e2e/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 10
        },
        "id": "docker-webkit",
        "name": "docker-webkit",
        "testDir": "C:/cursor/ha-ingestor/tests/e2e",
        "testIgnore": [
          "**/node_modules/**",
          "**/dist/**",
          "**/coverage/**"
        ],
        "testMatch": [
          "**/system-health.spec.ts",
          "**/dashboard-functionality.spec.ts",
          "**/monitoring-screen.spec.ts",
          "**/settings-screen.spec.ts",
          "**/visual-regression.spec.ts",
          "**/integration.spec.ts",
          "**/performance.spec.ts",
          "**/api-endpoints.spec.ts",
          "**/frontend-ui-comprehensive.spec.ts",
          "**/integration-performance-enhanced.spec.ts",
          "**/dashboard-data-loading.spec.ts",
          "**/error-handling-comprehensive.spec.ts",
          "**/user-journey-complete.spec.ts",
          "**/cross-service-integration.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/cursor/ha-ingestor/tests/e2e/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 10
        },
        "id": "docker-mobile-chrome",
        "name": "docker-mobile-chrome",
        "testDir": "C:/cursor/ha-ingestor/tests/e2e",
        "testIgnore": [
          "**/node_modules/**",
          "**/dist/**",
          "**/coverage/**"
        ],
        "testMatch": [
          "**/system-health.spec.ts",
          "**/dashboard-functionality.spec.ts",
          "**/monitoring-screen.spec.ts",
          "**/settings-screen.spec.ts",
          "**/visual-regression.spec.ts",
          "**/integration.spec.ts",
          "**/performance.spec.ts",
          "**/api-endpoints.spec.ts",
          "**/frontend-ui-comprehensive.spec.ts",
          "**/integration-performance-enhanced.spec.ts",
          "**/dashboard-data-loading.spec.ts",
          "**/error-handling-comprehensive.spec.ts",
          "**/user-journey-complete.spec.ts",
          "**/cross-service-integration.spec.ts"
        ],
        "timeout": 60000
      },
      {
        "outputDir": "C:/cursor/ha-ingestor/tests/e2e/test-results",
        "repeatEach": 1,
        "retries": 0,
        "metadata": {
          "actualWorkers": 10
        },
        "id": "docker-mobile-safari",
        "name": "docker-mobile-safari",
        "testDir": "C:/cursor/ha-ingestor/tests/e2e",
        "testIgnore": [
          "**/node_modules/**",
          "**/dist/**",
          "**/coverage/**"
        ],
        "testMatch": [
          "**/system-health.spec.ts",
          "**/dashboard-functionality.spec.ts",
          "**/monitoring-screen.spec.ts",
          "**/settings-screen.spec.ts",
          "**/visual-regression.spec.ts",
          "**/integration.spec.ts",
          "**/performance.spec.ts",
          "**/api-endpoints.spec.ts",
          "**/frontend-ui-comprehensive.spec.ts",
          "**/integration-performance-enhanced.spec.ts",
          "**/dashboard-data-loading.spec.ts",
          "**/error-handling-comprehensive.spec.ts",
          "**/user-journey-complete.spec.ts",
          "**/cross-service-integration.spec.ts"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.55.1",
    "workers": 10,
    "webServer": {
      "command": "echo \"Using existing Docker deployment at http://localhost:3000\"",
      "url": "http://localhost:3000",
      "reuseExistingServer": true,
      "timeout": 120000,
      "ignoreHTTPSErrors": true
    }
  },
  "suites": [
    {
      "title": "system-health.spec.ts",
      "file": "system-health.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "System Health Tests",
          "file": "system-health.spec.ts",
          "line": 8,
          "column": 6,
          "specs": [
            {
              "title": "All services are healthy and responding",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-chromium",
                  "projectName": "docker-chromium",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1052,
                      "error": {
                        "message": "Error: page.waitForTimeout: Target page, context or browser has been closed",
                        "stack": "Error: page.waitForTimeout: Target page, context or browser has been closed\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 15
                        },
                        "snippet": "  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 15
                          },
                          "message": "Error: page.waitForTimeout: Target page, context or browser has been closed\n\n  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.384Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 15
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-firefox",
                  "projectName": "docker-firefox",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 11782,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.514Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-webkit",
                  "projectName": "docker-webkit",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 3714,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:22.697Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-chrome",
                  "projectName": "docker-mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 6,
                      "status": "passed",
                      "duration": 3185,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:43.542Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-safari",
                  "projectName": "docker-mobile-safari",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 3,
                      "status": "passed",
                      "duration": 3946,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:45.461Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "827b7e891744f7029d77-7ae5fc67247027b379f1",
              "file": "system-health.spec.ts",
              "line": 18,
              "column": 7
            },
            {
              "title": "Health dashboard displays system status correctly",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-chromium",
                  "projectName": "docker-chromium",
                  "results": [
                    {
                      "workerIndex": 1,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 844,
                      "error": {
                        "message": "Error: page.waitForTimeout: Target page, context or browser has been closed",
                        "stack": "Error: page.waitForTimeout: Target page, context or browser has been closed\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 15
                        },
                        "snippet": "  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 15
                          },
                          "message": "Error: page.waitForTimeout: Target page, context or browser has been closed\n\n  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.456Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 15
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-firefox",
                  "projectName": "docker-firefox",
                  "results": [
                    {
                      "workerIndex": 7,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 18806,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 41
                        },
                        "snippet": "  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 41
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n\n  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.472Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-firefox\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-webkit",
                  "projectName": "docker-webkit",
                  "results": [
                    {
                      "workerIndex": 14,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 13911,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 41
                        },
                        "snippet": "  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 41
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n\n  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:22.732Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-webkit\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-chrome",
                  "projectName": "docker-mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 17,
                      "parallelIndex": 9,
                      "status": "failed",
                      "duration": 13094,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 41
                        },
                        "snippet": "  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 41
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n\n  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:42.745Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-chrome\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-safari",
                  "projectName": "docker-mobile-safari",
                  "results": [
                    {
                      "workerIndex": 23,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 14175,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 41
                        },
                        "snippet": "  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 41
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"health-card\"]') to be visible\u001b[22m\n\n\n  39 |     \n  40 |     // Wait for health data to load\n> 41 |     await page.waitForSelector('[data-testid=\"health-card\"]', { timeout: 10000 });\n     |                ^\n  42 |     \n  43 |     // Verify health indicators are present\n  44 |     const healthCards = page.locator('[data-testid=\"health-card\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:41:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:45.621Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-ff84d-ays-system-status-correctly-docker-mobile-safari\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 41
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "827b7e891744f7029d77-a24e6bbee1e4aa22c814",
              "file": "system-health.spec.ts",
              "line": 36,
              "column": 7
            },
            {
              "title": "Statistics endpoint returns valid data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-chromium",
                  "projectName": "docker-chromium",
                  "results": [
                    {
                      "workerIndex": 2,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 823,
                      "error": {
                        "message": "Error: page.waitForTimeout: Target page, context or browser has been closed",
                        "stack": "Error: page.waitForTimeout: Target page, context or browser has been closed\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 15
                        },
                        "snippet": "  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 15
                          },
                          "message": "Error: page.waitForTimeout: Target page, context or browser has been closed\n\n  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.452Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 15
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-firefox",
                  "projectName": "docker-firefox",
                  "results": [
                    {
                      "workerIndex": 8,
                      "parallelIndex": 8,
                      "status": "failed",
                      "duration": 19986,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 46,
                          "line": 53
                        },
                        "snippet": "  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 46,
                            "line": 53
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.482Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-firefox\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 46,
                        "line": 53
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-webkit",
                  "projectName": "docker-webkit",
                  "results": [
                    {
                      "workerIndex": 13,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 18796,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 46,
                          "line": 53
                        },
                        "snippet": "  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 46,
                            "line": 53
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:22.670Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-webkit\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 46,
                        "line": 53
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-chrome",
                  "projectName": "docker-mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 16,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 18020,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 46,
                          "line": 53
                        },
                        "snippet": "  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 46,
                            "line": 53
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:41.184Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-chrome\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 46,
                        "line": 53
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-safari",
                  "projectName": "docker-mobile-safari",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 6,
                      "status": "failed",
                      "duration": 18100,
                      "error": {
                        "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n",
                        "stack": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 46,
                          "line": 53
                        },
                        "snippet": "  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 46,
                            "line": 53
                          },
                          "message": "TimeoutError: apiRequestContext.get: Timeout 15000ms exceeded.\nCall log:\n\u001b[2m  - → GET http://localhost:8003/api/v1/stats\u001b[22m\n\u001b[2m    - user-agent: Playwright-E2E-Tests\u001b[22m\n\u001b[2m    - accept: application/json, text/plain, */*\u001b[22m\n\u001b[2m    - accept-encoding: gzip,deflate,br\u001b[22m\n\n\n  51 |\n  52 |   test('Statistics endpoint returns valid data', async ({ page }) => {\n> 53 |     const statsResponse = await page.request.get('http://localhost:8003/api/v1/stats');\n     |                                              ^\n  54 |     expect(statsResponse.status()).toBe(200);\n  55 |     \n  56 |     const statsData = await statsResponse.json();\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:53:46"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:51.067Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-b23d8-endpoint-returns-valid-data-docker-mobile-safari\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 46,
                        "line": 53
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "827b7e891744f7029d77-6f2362ff451fac5e1796",
              "file": "system-health.spec.ts",
              "line": 52,
              "column": 7
            },
            {
              "title": "Recent events endpoint returns data",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-chromium",
                  "projectName": "docker-chromium",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 3,
                      "status": "failed",
                      "duration": 989,
                      "error": {
                        "message": "Error: page.waitForTimeout: Target page, context or browser has been closed",
                        "stack": "Error: page.waitForTimeout: Target page, context or browser has been closed\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 15
                        },
                        "snippet": "  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 15
                          },
                          "message": "Error: page.waitForTimeout: Target page, context or browser has been closed\n\n  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.446Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 15
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-firefox",
                  "projectName": "docker-firefox",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 9,
                      "status": "passed",
                      "duration": 11443,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.547Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-webkit",
                  "projectName": "docker-webkit",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 5,
                      "status": "passed",
                      "duration": 3702,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:22.705Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-chrome",
                  "projectName": "docker-mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 19,
                      "parallelIndex": 0,
                      "status": "passed",
                      "duration": 3700,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:44.682Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-safari",
                  "projectName": "docker-mobile-safari",
                  "results": [
                    {
                      "workerIndex": 25,
                      "parallelIndex": 2,
                      "status": "passed",
                      "duration": 3836,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:51.151Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "expected"
                }
              ],
              "id": "827b7e891744f7029d77-899172bcaa8d1f4abe93",
              "file": "system-health.spec.ts",
              "line": 63,
              "column": 7
            },
            {
              "title": "WebSocket connection establishes successfully",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-chromium",
                  "projectName": "docker-chromium",
                  "results": [
                    {
                      "workerIndex": 4,
                      "parallelIndex": 4,
                      "status": "failed",
                      "duration": 1040,
                      "error": {
                        "message": "Error: page.waitForTimeout: Target page, context or browser has been closed",
                        "stack": "Error: page.waitForTimeout: Target page, context or browser has been closed\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 15
                        },
                        "snippet": "  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 15
                          },
                          "message": "Error: page.waitForTimeout: Target page, context or browser has been closed\n\n  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.403Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 15
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-firefox",
                  "projectName": "docker-firefox",
                  "results": [
                    {
                      "workerIndex": 11,
                      "parallelIndex": 2,
                      "status": "failed",
                      "duration": 21381,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 83
                        },
                        "snippet": "  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 83
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n\n  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:22.634Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-firefox\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 83
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-webkit",
                  "projectName": "docker-webkit",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 14772,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 83
                        },
                        "snippet": "  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 83
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n\n  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:26.560Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-webkit\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 83
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-chrome",
                  "projectName": "docker-mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 20,
                      "parallelIndex": 7,
                      "status": "failed",
                      "duration": 13611,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 83
                        },
                        "snippet": "  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 83
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n\n  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:44.887Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-chrome\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 83
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-safari",
                  "projectName": "docker-mobile-safari",
                  "results": [
                    {
                      "workerIndex": 26,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 13737,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 83
                        },
                        "snippet": "  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 83
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"websocket-status\"]') to be visible\u001b[22m\n\n\n  81 |     \n  82 |     // Wait for WebSocket connection indicator\n> 83 |     await page.waitForSelector('[data-testid=\"websocket-status\"]', { timeout: 10000 });\n     |                ^\n  84 |     \n  85 |     // Check connection status\n  86 |     const connectionStatus = page.locator('[data-testid=\"websocket-status\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:83:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:51.910Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-790d5-on-establishes-successfully-docker-mobile-safari\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 83
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "827b7e891744f7029d77-3c13fec49c53c32297eb",
              "file": "system-health.spec.ts",
              "line": 79,
              "column": 7
            },
            {
              "title": "Error handling works correctly when services are down",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-chromium",
                  "projectName": "docker-chromium",
                  "results": [
                    {
                      "workerIndex": 5,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 1089,
                      "error": {
                        "message": "Error: page.waitForTimeout: Target page, context or browser has been closed",
                        "stack": "Error: page.waitForTimeout: Target page, context or browser has been closed\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 15
                        },
                        "snippet": "  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 15
                          },
                          "message": "Error: page.waitForTimeout: Target page, context or browser has been closed\n\n  13 |     await page.waitForLoadState('domcontentloaded'); // More reliable than networkidle\n  14 |     // Additional wait for React to hydrate\n> 15 |     await page.waitForTimeout(2000);\n     |                ^\n  16 |   });\n  17 |\n  18 |   test('All services are healthy and responding', async ({ page }) => {\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:15:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:19.444Z",
                      "annotations": [],
                      "attachments": [],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 15
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-firefox",
                  "projectName": "docker-firefox",
                  "results": [
                    {
                      "workerIndex": 10,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 21147,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 100
                        },
                        "snippet": "   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 100
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n\n   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:22.384Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-firefox\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 100
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-webkit",
                  "projectName": "docker-webkit",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 15032,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 100
                        },
                        "snippet": "   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 100
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n\n   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:26.562Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-webkit\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 100
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-chrome",
                  "projectName": "docker-mobile-chrome",
                  "results": [
                    {
                      "workerIndex": 22,
                      "parallelIndex": 5,
                      "status": "failed",
                      "duration": 13564,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 100
                        },
                        "snippet": "   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 100
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n\n   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:45.042Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-chrome\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 100
                      }
                    }
                  ],
                  "status": "unexpected"
                },
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "docker-mobile-safari",
                  "projectName": "docker-mobile-safari",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 1,
                      "status": "failed",
                      "duration": 13935,
                      "error": {
                        "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n",
                        "stack": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16",
                        "location": {
                          "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                          "column": 16,
                          "line": 100
                        },
                        "snippet": "   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');"
                      },
                      "errors": [
                        {
                          "location": {
                            "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                            "column": 16,
                            "line": 100
                          },
                          "message": "TimeoutError: page.waitForSelector: Timeout 10000ms exceeded.\nCall log:\n\u001b[2m  - waiting for locator('[data-testid=\"error-state\"]') to be visible\u001b[22m\n\n\n   98 |     \n   99 |     // Wait for error state to appear\n> 100 |     await page.waitForSelector('[data-testid=\"error-state\"]', { timeout: 10000 });\n      |                ^\n  101 |     \n  102 |     // Verify error message is displayed\n  103 |     const errorMessage = page.locator('[data-testid=\"error-message\"]');\n    at C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts:100:16"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-25T08:46:52.063Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "screenshot",
                          "contentType": "image/png",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\\test-failed-1.png"
                        },
                        {
                          "name": "video",
                          "contentType": "video/webm",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\\video.webm"
                        },
                        {
                          "name": "error-context",
                          "contentType": "text/markdown",
                          "path": "C:\\cursor\\ha-ingestor\\tests\\e2e\\test-results\\system-health-System-Healt-8031a-ctly-when-services-are-down-docker-mobile-safari\\error-context.md"
                        }
                      ],
                      "errorLocation": {
                        "file": "C:\\cursor\\ha-ingestor\\tests\\e2e\\system-health.spec.ts",
                        "column": 16,
                        "line": 100
                      }
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "827b7e891744f7029d77-a553ad58beecac9ee65e",
              "file": "system-health.spec.ts",
              "line": 90,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-25T08:46:08.703Z",
    "duration": 60712.659999999996,
    "expected": 8,
    "skipped": 0,
    "unexpected": 22,
    "flaky": 0
  }
}