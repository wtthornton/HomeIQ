# Context7 Knowledge Base Cache - Master Index
# This file tracks all cached documentation and provides fast lookup

version: "1.0.0"
last_updated: "2025-10-12T00:00:00Z"
cache_location: "docs/kb/context7-cache"

# Statistics
statistics:
  total_entries: 7
  total_size_mb: 1.3
  libraries_count: 5
  topics_count: 2
  patterns_count: 3
  cache_hit_rate: 0.85
  average_response_time_ms: 120
  last_updated: "2025-10-12T00:00:00Z"

# Libraries Cache
libraries:
  - id: "vitest"
    name: "Vitest"
    version: "3.2.4"
    library_id: "/vitest-dev/vitest/v3_2_4"
    file: "libraries/vitest/docs.md"
    trust_score: 8.3
    code_snippets: 1183
    status: "active"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 1
    topics:
      - "testing"
      - "mocking"
      - "coverage"
      - "configuration"
  
  - id: "pytest"
    name: "pytest"
    version: "7.4.3+"
    library_id: "/pytest-dev/pytest"
    file: "libraries/pytest/docs.md"
    trust_score: 9.5
    code_snippets: 614
    status: "active"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 1
    topics:
      - "testing"
      - "fixtures"
      - "parametrization"
      - "async"
  
  - id: "playwright"
    name: "Playwright"
    version: "1.56.0"
    library_id: "/microsoft/playwright"
    file: "libraries/playwright/docs.md"
    trust_score: 9.9
    code_snippets: 2103
    status: "active"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 1
    topics:
      - "e2e-testing"
      - "automation"
      - "assertions"
      - "configuration"

  - id: "influxdb-python-client"
    name: "InfluxDB Python Client"
    library_id: "/influxdata/influxdb-client-python"
    file: "influxdb-python-patterns.md"
    trust_score: 7.7
    code_snippets: 27
    status: "active"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 15
    topics:
      - "write-patterns"
      - "query-patterns"
      - "batch-operations"
      - "error-handling"

  - id: "homeassistant"
    name: "Home Assistant"
    version: "2025.10.x"
    library_id: "/home-assistant/developers.home-assistant"
    file: "libraries/homeassistant/docs.md"
    trust_score: 10
    code_snippets: 1824
    status: "active"
    last_accessed: "2025-10-12T00:00:00Z"
    last_updated: "2025-10-12T00:00:00Z"
    access_count: 1
    topics:
      - "websocket-api"
      - "rest-api"
      - "authentication"
      - "events"
      - "states"
      - "services"
      - "entities"
      - "integration"

# Topics Cache
topics:
  - id: "influxdb-admin-api-queries"
    name: "InfluxDB Admin API Query Patterns"
    file: "influxdb-admin-api-query-patterns.md"
    description: "Admin API querying patterns for time-series statistics from InfluxDB"
    status: "implementation-ready"
    related_libraries: ["influxdb-python-client"]
    tags:
      - "admin-api"
      - "statistics"
      - "time-series"
      - "aggregation"
      - "read-layer"
    created: "2025-10-12T00:00:00Z"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 1
  
  - id: "data-flow-architecture-fix"
    name: "Data Flow Architecture Fix Pattern"
    file: "data-flow-architecture-fix-pattern.md"
    description: "Architectural pattern for fixing data flow from services -> InfluxDB -> Admin API -> Dashboard"
    status: "implementation-ready"
    priority: "high"
    complexity: "medium"
    estimated_effort_weeks: 4
    tags:
      - "architecture"
      - "data-flow"
      - "influxdb"
      - "admin-api"
      - "dashboard"
      - "migration"
    created: "2025-10-12T00:00:00Z"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 1

# UX/UI Patterns (Project-Specific)
ux_patterns:
  - id: "health-dashboard-dependencies-tab"
    name: "Health Dashboard Dependencies Tab Pattern"
    file: "ux-patterns/health-dashboard-dependencies-tab-pattern.md"
    description: "Interactive service dependency graph visualization with click-to-highlight, hover tooltips, and layered architecture"
    tags:
      - "visualization"
      - "dependencies"
      - "service-graph"
      - "interactive"
      - "architecture"
      - "react"
      - "tailwind"
    status: "production-tested"
    user_approved: true
    source_component: "services/health-dashboard/src/components/ServiceDependencyGraph.tsx"
    source_url: "http://localhost:3000/"
    created: "2025-10-12T00:00:00Z"
    last_accessed: "2025-10-12T00:00:00Z"
    access_count: 1
    complexity: "medium"
    reusability: "high"
    maintenance: "low"
    use_cases:
      - "service topology visualizations"
      - "data flow diagrams"
      - "system architecture views"
      - "microservice dependency graphs"
      - "pipeline visualizations"
      - "infrastructure maps"
      - "integration status boards"
    key_features:
      - "Interactive dependency graph with click-to-highlight"
      - "Hover tooltips with contextual information"
      - "Layered architecture visualization (top-to-bottom data flow)"
      - "Color-coded status indicators (green/yellow/red/gray)"
      - "Icon-based service representation (emoji)"
      - "Smooth scale animations on hover/select"
      - "Dark mode support"
      - "Responsive grid layouts"
      - "Lightweight (pure React/CSS, no heavy graph libraries)"
    technology_stack:
      - "React 18.2"
      - "TypeScript 5.2"
      - "Tailwind CSS 3.4"
      - "Vite 5.0"

# Fuzzy Match Aliases
aliases:
  dependencies:
    - "dependency"
    - "dependencies"
    - "deps"
    - "service-graph"
    - "service-dependencies"
  visualization:
    - "visualization"
    - "visualizations"
    - "viz"
    - "graph"
    - "diagram"
  interactive:
    - "interactive"
    - "clickable"
    - "explorable"
    - "exploratory"

# Search Index (for fast lookup)
search_index:
  keywords:
    # Testing frameworks
    vitest: ["vitest"]
    pytest: ["pytest"]
    playwright: ["playwright"]
    testing: ["vitest", "pytest", "playwright"]
    test: ["vitest", "pytest", "playwright"]
    mocking: ["vitest", "pytest"]
    coverage: ["vitest"]
    fixtures: ["pytest", "playwright"]
    parametrization: ["pytest"]
    e2e: ["playwright"]
    automation: ["playwright"]
    assertions: ["vitest", "pytest", "playwright"]
    unit-testing: ["vitest", "pytest"]
    integration-testing: ["pytest", "playwright"]
    async: ["pytest", "playwright"]
    
    # UI/Architecture
    service: ["health-dashboard-dependencies-tab"]
    dependency: ["health-dashboard-dependencies-tab"]
    dependencies: ["health-dashboard-dependencies-tab"]
    graph: ["health-dashboard-dependencies-tab"]
    visualization: ["health-dashboard-dependencies-tab"]
    interactive: ["health-dashboard-dependencies-tab"]
    architecture: ["health-dashboard-dependencies-tab", "data-flow-architecture-fix"]
    topology: ["health-dashboard-dependencies-tab"]
    data-flow: ["health-dashboard-dependencies-tab", "data-flow-architecture-fix"]
    layered: ["health-dashboard-dependencies-tab"]
    status-indicators: ["health-dashboard-dependencies-tab"]
    react: ["health-dashboard-dependencies-tab"]
    tailwind: ["health-dashboard-dependencies-tab"]
    hover: ["health-dashboard-dependencies-tab"]
    tooltip: ["health-dashboard-dependencies-tab"]
    click: ["health-dashboard-dependencies-tab"]
    highlight: ["health-dashboard-dependencies-tab"]
    dark-mode: ["health-dashboard-dependencies-tab"]
    
    # Database
    influxdb: ["influxdb-python-client", "influxdb-admin-api-queries", "data-flow-architecture-fix"]
    influxdb-client: ["influxdb-python-client", "influxdb-admin-api-queries"]
    time-series: ["influxdb-admin-api-queries"]
    query: ["influxdb-admin-api-queries"]
    statistics: ["influxdb-admin-api-queries"]
    admin-api: ["influxdb-admin-api-queries", "data-flow-architecture-fix"]
    dashboard: ["health-dashboard-dependencies-tab", "data-flow-architecture-fix"]
    migration: ["data-flow-architecture-fix"]
    refactoring: ["data-flow-architecture-fix"]
    read-layer: ["influxdb-admin-api-queries"]
    write-patterns: ["influxdb-python-client"]
    aggregation: ["influxdb-admin-api-queries"]
    metrics: ["influxdb-admin-api-queries"]
    
    # Home Assistant
    home-assistant: ["homeassistant"]
    homeassistant: ["homeassistant"]
    websocket: ["homeassistant"]
    websocket-api: ["homeassistant"]
    rest-api: ["homeassistant"]
    ha-events: ["homeassistant"]
    ha-states: ["homeassistant"]
    ha-services: ["homeassistant"]
    ha-entities: ["homeassistant"]
    ha-authentication: ["homeassistant"]
    ha-integration: ["homeassistant"]
    state-changed: ["homeassistant"]
    event-subscription: ["homeassistant"]
    long-lived-token: ["homeassistant"]

# Maintenance Settings
maintenance:
  cleanup_threshold_days: 30
  min_hit_rate: 0.1
  max_entry_size_mb: 10
  next_cleanup: "2025-11-12T00:00:00Z"
  auto_cleanup_enabled: true

# Performance Metrics
performance:
  target_hit_rate: 0.87
  target_response_time_ms: 150
  max_cache_size_mb: 100
  current_cache_size_mb: 0.1
