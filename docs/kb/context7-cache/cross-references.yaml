# Context7 Knowledge Base Cross-References
# Generated: 2025-10-07T16:40:00Z

cross_references:
  # Frontend Development
  frontend_development:
    primary_libraries: ["react", "typescript", "tailwindcss", "vite", "vitest"]
    supporting_libraries: ["heroicons"]
    key_topics: ["components", "hooks", "state_management", "ui_design", "testing"]
    common_patterns:
      - "React component with TypeScript and TailwindCSS"
      - "Custom hooks for state management"
      - "Component testing with Vitest"
      - "Build optimization with Vite"
      - "Icon integration with Heroicons"
    
  # Backend Development
  backend_development:
    primary_libraries: ["fastapi", "aiohttp", "pytest"]
    supporting_libraries: ["python-logging"]
    key_topics: ["api_endpoints", "websocket", "authentication", "testing"]
    common_patterns:
      - "FastAPI REST endpoints with authentication"
      - "WebSocket connections with aiohttp"
      - "Async testing with pytest"
      - "Structured logging with Python logging"
      - "API testing and validation"
    
  # Data and Storage
  data_storage:
    primary_libraries: ["influxdb", "redis", "elasticsearch"]
    supporting_libraries: []
    key_topics: ["time_series", "caching", "data_processing", "performance"]
    common_patterns:
      - "Time series data with InfluxDB"
      - "Caching strategies with Redis"
      - "Search and analytics with Elasticsearch"
      - "Data retention and cleanup"
      - "Performance optimization"
    
  # Infrastructure and DevOps
  infrastructure:
    primary_libraries: ["docker", "python-logging"]
    supporting_libraries: []
    key_topics: ["container_management", "logging", "deployment", "monitoring"]
    common_patterns:
      - "Container orchestration with Docker"
      - "Application logging and monitoring"
      - "Health checks and observability"
      - "Deployment and scaling"
      - "Infrastructure as code"
    
  # Integration and Automation
  integration:
    primary_libraries: ["homeassistant", "aiohttp", "redis"]
    supporting_libraries: ["python-logging"]
    key_topics: ["websocket", "real_time", "state_management", "monitoring"]
    common_patterns:
      - "Home Assistant WebSocket integration"
      - "Real-time event processing"
      - "State synchronization"
      - "Event-driven architecture"
      - "Home automation workflows"

  # Development Workflow
  development_workflow:
    primary_libraries: ["vite", "vitest", "playwright", "pytest"]
    supporting_libraries: ["docker"]
    key_topics: ["testing", "build_tools", "performance", "container_management"]
    common_patterns:
      - "Frontend testing with Vitest and Playwright"
      - "Backend testing with pytest"
      - "Build and deployment with Vite and Docker"
      - "CI/CD pipeline setup"
      - "Performance testing and optimization"

  # Library Relationships
  library_relationships:
    react:
      works_with: ["typescript", "tailwindcss", "heroicons", "vitest"]
      complements: ["fastapi", "homeassistant"]
      testing: ["vitest", "playwright"]
    
    fastapi:
      works_with: ["aiohttp", "pytest", "python-logging"]
      complements: ["react", "influxdb"]
      testing: ["pytest"]
    
    aiohttp:
      works_with: ["fastapi", "redis", "homeassistant"]
      complements: ["react", "influxdb"]
      testing: ["pytest"]
    
    influxdb:
      works_with: ["redis", "elasticsearch", "python-logging"]
      complements: ["fastapi", "homeassistant"]
      testing: ["pytest"]
    
    docker:
      works_with: ["vite", "python-logging"]
      complements: ["fastapi", "react", "influxdb"]
      testing: ["playwright", "pytest"]

  # Topic Relationships
  topic_relationships:
    components:
      requires: ["hooks", "state_management"]
      benefits_from: ["ui_design", "testing"]
      leads_to: ["performance", "api_endpoints"]
    
    api_endpoints:
      requires: ["authentication", "routing"]
      benefits_from: ["websocket", "caching"]
      leads_to: ["testing", "performance"]
    
    testing:
      covers: ["components", "api_endpoints", "websocket"]
      benefits_from: ["logging", "performance"]
      leads_to: ["deployment", "monitoring"]
    
    performance:
      requires: ["caching", "optimization"]
      benefits_from: ["monitoring", "logging"]
      leads_to: ["deployment", "scalability"]

  # Common Development Scenarios
  development_scenarios:
    "Create React Component":
      libraries: ["react", "typescript", "tailwindcss"]
      topics: ["components", "hooks", "ui_design"]
      workflow: ["component_creation", "styling", "testing"]
    
    "Implement API Endpoint":
      libraries: ["fastapi", "pytest"]
      topics: ["api_endpoints", "authentication", "testing"]
      workflow: ["endpoint_creation", "validation", "testing"]
    
    "Setup WebSocket Connection":
      libraries: ["aiohttp", "redis"]
      topics: ["websocket", "real_time", "caching"]
      workflow: ["connection_setup", "message_handling", "error_handling"]
    
    "Configure Time Series Storage":
      libraries: ["influxdb", "python-logging"]
      topics: ["time_series", "data_processing", "monitoring"]
      workflow: ["schema_design", "data_ingestion", "query_optimization"]
    
    "Setup Testing Pipeline":
      libraries: ["vitest", "playwright", "pytest"]
      topics: ["testing", "performance", "automation"]
      workflow: ["test_setup", "test_execution", "coverage_analysis"]

  # Performance Optimization Patterns
  performance_patterns:
    frontend_optimization:
      libraries: ["react", "vite", "redis"]
      techniques: ["code_splitting", "caching", "lazy_loading"]
      metrics: ["bundle_size", "load_time", "render_time"]
    
    backend_optimization:
      libraries: ["fastapi", "redis", "influxdb"]
      techniques: ["async_processing", "caching", "database_optimization"]
      metrics: ["response_time", "throughput", "memory_usage"]
    
    data_optimization:
      libraries: ["influxdb", "elasticsearch", "redis"]
      techniques: ["indexing", "compression", "retention_policies"]
      metrics: ["query_time", "storage_size", "ingestion_rate"]
