name: ha-ingestor

services:
  influxdb:
    image: influxdb:2.7
    container_name: ha-ingestor-influxdb
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-admin123}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
    volumes:
      - influxdb_data:/var/lib/influxdb2
      - influxdb_config:/etc/influxdb2
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=influxdb,environment=production"

  websocket-ingestion:
    build:
      context: .
      dockerfile: services/websocket-ingestion/Dockerfile
    container_name: ha-ingestor-websocket
    restart: unless-stopped
    ports:
      - "8001:8001"
    env_file:
      - infrastructure/.env.websocket
      - infrastructure/.env.weather
      - infrastructure/.env.influxdb
    environment:
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL:-}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN:-}
      - ENRICHMENT_SERVICE_URL=http://enrichment-pipeline:8002
      - DATA_API_URL=http://ha-ingestor-data-api:8006
      - WEBSOCKET_INGESTION_PORT=8001
      - ENABLE_HOME_ASSISTANT=true
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs}
      - LOG_FORMAT=json
      - LOG_OUTPUT=both
      # WebSocket Retry Configuration
      - WEBSOCKET_MAX_RETRIES=${WEBSOCKET_MAX_RETRIES:--1}  # -1 = infinite retry (recommended)
      - WEBSOCKET_MAX_RETRY_DELAY=${WEBSOCKET_MAX_RETRY_DELAY:-300}  # Max 5 minutes between retries
      # Device storage configuration
      - STORE_DEVICE_HISTORY_IN_INFLUXDB=${STORE_DEVICE_HISTORY_IN_INFLUXDB:-false}
      # Weather API Configuration
      - WEATHER_API_KEY=${WEATHER_API_KEY:-}
      - WEATHER_API_URL=${WEATHER_API_URL:-https://api.openweathermap.org/data/2.5}
      - WEATHER_DEFAULT_LOCATION=${WEATHER_DEFAULT_LOCATION:-Las Vegas,NV,US}
      - WEATHER_ENRICHMENT_ENABLED=${WEATHER_ENRICHMENT_ENABLED:-true}
      - WEATHER_CACHE_MINUTES=${WEATHER_CACHE_MINUTES:-15}
      - WEATHER_RATE_LIMIT_PER_MINUTE=${WEATHER_RATE_LIMIT_PER_MINUTE:-50}
      - WEATHER_RATE_LIMIT_PER_DAY=${WEATHER_RATE_LIMIT_PER_DAY:-900}
      - WEATHER_REQUEST_TIMEOUT=${WEATHER_REQUEST_TIMEOUT:-10}
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=websocket-ingestion,environment=production"
    volumes:
      - ha_ingestor_logs:/var/log/ha-ingestor
    depends_on:
      enrichment-pipeline:
        condition: service_healthy
      data-api:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  enrichment-pipeline:
    build:
      context: .
      dockerfile: services/enrichment-pipeline/Dockerfile
    container_name: ha-ingestor-enrichment
    restart: unless-stopped
    ports:
      - "8002:8002"
    env_file:
      - infrastructure/.env.influxdb
      - infrastructure/.env.weather
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs}
      - LOG_FORMAT=json
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=enrichment-pipeline,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  admin-api:
    build:
      context: .
      dockerfile: services/admin-api/Dockerfile
    container_name: ha-ingestor-admin
    restart: unless-stopped
    ports:
      - "8003:8004"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./infrastructure:/app/infrastructure:rw
      - ./docker-compose.yml:/app/docker-compose.yml:ro
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs}
      - LOG_FORMAT=json
      - API_HOST=0.0.0.0
      - API_PORT=8004
      - ENABLE_AUTH=false
      - DOCKER_HOST=unix:///var/run/docker.sock
      - WEATHER_API_KEY=${WEATHER_API_KEY:-}
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL:-}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN:-}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-super-secret-jwt-key}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - ACCESS_TOKEN_EXPIRE_MINUTES=${ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD:-adminpass}
      - WEBSOCKET_INGESTION_URL=http://websocket-ingestion:8001
      - ENRICHMENT_PIPELINE_URL=http://enrichment-pipeline:8002
    depends_on:
      influxdb:
        condition: service_healthy
      websocket-ingestion:
        condition: service_healthy
      enrichment-pipeline:
        condition: service_healthy
      data-api:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=admin-api,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  data-api:
    build:
      context: .
      dockerfile: services/data-api/Dockerfile
    container_name: ha-ingestor-data-api
    restart: unless-stopped
    ports:
      - "8006:8006"
    environment:
      - DATA_API_HOST=0.0.0.0
      - DATA_API_PORT=8006
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - DATABASE_URL=sqlite+aiosqlite:///./data/metadata.db
      - SQLITE_TIMEOUT=30
      - SQLITE_CACHE_SIZE=-64000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - ENABLE_AUTH=false
      - API_KEY=${API_KEY:-}
      - CORS_ORIGINS=http://localhost:3000,http://localhost
    volumes:
      - sqlite-data:/app/data
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=data-api,environment=production"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8006/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  data-retention:
    build:
      context: .
      dockerfile: services/data-retention/Dockerfile
    container_name: ha-ingestor-data-retention
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs}
      - LOG_FORMAT=json
      - CLEANUP_INTERVAL_HOURS=${CLEANUP_INTERVAL_HOURS:-24}
      - MONITORING_INTERVAL_MINUTES=${MONITORING_INTERVAL_MINUTES:-5}
      - COMPRESSION_INTERVAL_HOURS=${COMPRESSION_INTERVAL_HOURS:-24}
      - BACKUP_INTERVAL_HOURS=${BACKUP_INTERVAL_HOURS:-24}
      - BACKUP_DIR=${BACKUP_DIR:-/backups}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=data-retention,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - data_retention_backups:/backups

  carbon-intensity:
    build:
      context: .
      dockerfile: services/carbon-intensity-service/Dockerfile
    container_name: ha-ingestor-carbon-intensity
    restart: unless-stopped
    ports:
      - "8010:8010"
    environment:
      # WattTime Authentication (username/password preferred for auto-refresh)
      - WATTTIME_USERNAME=${WATTTIME_USERNAME:-}
      - WATTTIME_PASSWORD=${WATTTIME_PASSWORD:-}
      # Or static token (expires every 30 minutes, not recommended)
      - WATTTIME_API_TOKEN=${WATTTIME_API_TOKEN:-}
      # Grid configuration
      - GRID_REGION=${GRID_REGION:-CAISO_NORTH}
      # InfluxDB configuration
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - SERVICE_PORT=8010
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 192M  # Increased from 128M (was at 53% usage)
        reservations:
          memory: 96M   # Increased from 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=carbon-intensity,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8010/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  electricity-pricing:
    build:
      context: .
      dockerfile: services/electricity-pricing-service/Dockerfile
    container_name: ha-ingestor-electricity-pricing
    restart: unless-stopped
    ports:
      - "8011:8011"
    environment:
      - PRICING_PROVIDER=${PRICING_PROVIDER:-awattar}
      - PRICING_API_KEY=${PRICING_API_KEY:-}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - SERVICE_PORT=8011
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 192M  # Increased from 128M (was at 57% usage)
        reservations:
          memory: 96M   # Increased from 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=electricity-pricing,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8011/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  air-quality:
    build:
      context: .
      dockerfile: services/air-quality-service/Dockerfile
    container_name: ha-ingestor-air-quality
    restart: unless-stopped
    ports:
      - "8012:8012"
    environment:
      - AIRNOW_API_KEY=${AIRNOW_API_KEY:-}
      - LATITUDE=${LATITUDE:-36.1699}
      - LONGITUDE=${LONGITUDE:--115.1398}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - SERVICE_PORT=8012
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 192M  # Increased from 128M (was at 58% usage)
        reservations:
          memory: 96M   # Increased from 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=air-quality,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8012/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  calendar:
    build:
      context: .
      dockerfile: services/calendar-service/Dockerfile
    container_name: ha-ingestor-calendar
    restart: unless-stopped
    ports:
      - "8013:8013"
    environment:
      # Home Assistant Configuration
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN}
      - CALENDAR_ENTITIES=${CALENDAR_ENTITIES:-calendar.primary}
      - CALENDAR_FETCH_INTERVAL=${CALENDAR_FETCH_INTERVAL:-900}
      # InfluxDB Configuration
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      # Service Configuration
      - SERVICE_PORT=8013
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 192M  # Increased from 128M (was at 54% usage)
        reservations:
          memory: 96M   # Increased from 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=calendar,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8013/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  smart-meter:
    build:
      context: .
      dockerfile: services/smart-meter-service/Dockerfile
    container_name: ha-ingestor-smart-meter
    restart: unless-stopped
    ports:
      - "8014:8014"
    environment:
      - METER_TYPE=${METER_TYPE:-home_assistant}
      - HOME_ASSISTANT_URL=${HOME_ASSISTANT_URL}
      - HOME_ASSISTANT_TOKEN=${HOME_ASSISTANT_TOKEN}
      - METER_API_TOKEN=${METER_API_TOKEN:-}
      - METER_DEVICE_ID=${METER_DEVICE_ID:-}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - SERVICE_PORT=8014
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 192M  # Increased from 128M (was at 54% usage)
        reservations:
          memory: 96M   # Increased from 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=smart-meter,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8014/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  energy-correlator:
    build:
      context: .
      dockerfile: services/energy-correlator/Dockerfile
    container_name: ha-ingestor-energy-correlator
    restart: unless-stopped
    ports:
      - "8017:8017"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - PROCESSING_INTERVAL=${ENERGY_CORRELATION_INTERVAL:-60}
      - LOOKBACK_MINUTES=${ENERGY_LOOKBACK_MINUTES:-5}
      - SERVICE_PORT=8017
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      influxdb:
        condition: service_healthy
      smart-meter:
        condition: service_started
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=energy-correlator,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8017/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # ============================================================================
  # sports-api: ARCHIVED - Epic 10 (API-SPORTS.io integration)
  # ============================================================================
  # This service was replaced by sports-data (Epic 11) which uses free ESPN API
  # Archived on: 2025-10-12
  # Reason: Frontend built for sports-data; API-SPORTS.io requires paid key
  # To restore: Uncomment this section and add API_SPORTS_KEY to environment
  # ============================================================================
  # sports-api:
  #   build:
  #     context: .
  #     dockerfile: services/sports-api/Dockerfile.dev
  #   container_name: ha-sports-api
  #   restart: unless-stopped
  #   ports:
  #     - "8015:8015"
  #   env_file:
  #     - infrastructure/env.sports.template
  #   environment:
  #     - API_SPORTS_KEY=${API_SPORTS_KEY:-}
  #     - SPORTS_API_PORT=8015
  #     - NFL_ENABLED=${NFL_ENABLED:-true}
  #     - NHL_ENABLED=${NHL_ENABLED:-true}
  #     - INFLUXDB_URL=http://influxdb:8086
  #     - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-ha-ingestor-token}
  #     - INFLUXDB_ORG=${INFLUXDB_ORG:-ha-ingestor}
  #     - INFLUXDB_BUCKET=sports_data
  #     - LOG_LEVEL=${LOG_LEVEL:-INFO}
  #   depends_on:
  #     influxdb:
  #       condition: service_healthy
  #   networks:
  #     - ha-ingestor-network
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 512M
  #       reservations:
  #         memory: 256M
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:8015/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 30s

  sports-data:
    build:
      context: ./services/sports-data
      dockerfile: Dockerfile
    container_name: ha-ingestor-sports-data
    restart: unless-stopped
    ports:
      - "8005:8005"
    environment:
      - SPORTS_API_KEY=${SPORTS_API_KEY:-}
      - SPORTS_API_PROVIDER=${SPORTS_API_PROVIDER:-espn}
      - PORT=8005
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=sports-data,environment=production"
    healthcheck:
      test: ["CMD", "python", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8005/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  health-dashboard:
    build:
      context: ./services/health-dashboard
      dockerfile: Dockerfile
    container_name: ha-ingestor-dashboard
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_BASE_URL=http://localhost:8003/api/v1
      - VITE_WS_URL=ws://localhost:8001/ws
      - VITE_ENVIRONMENT=production
    depends_on:
      admin-api:
        condition: service_healthy
      sports-data:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=health-dashboard,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  log-aggregator:
    build:
      context: .
      dockerfile: services/log-aggregator/Dockerfile
    container_name: ha-ingestor-log-aggregator
    restart: unless-stopped
    ports:
      - "8015:8015"
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FILE_PATH=${LOG_FILE_PATH:-/app/logs}
      - LOG_FORMAT=json
      - PORT=8015
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ha_ingestor_logs:/var/log/ha-ingestor
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 128M
        reservations:
          memory: 64M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=log-aggregator,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8015/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  ai-automation-service:
    build:
      context: .
      dockerfile: services/ai-automation-service/Dockerfile
    container_name: ai-automation-service
    restart: unless-stopped
    ports:
      - "8018:8018"
    env_file:
      - infrastructure/env.ai-automation
    environment:
      - DATA_API_URL=http://data-api:8006
    depends_on:
      data-api:
        condition: service_healthy
    volumes:
      - ai_automation_data:/app/data
      - ai_automation_models:/app/models  # Phase 1: OpenVINO model cache
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 2G  # Increased for model loading (was 1G)
        reservations:
          memory: 1G  # Increased for model inference (was 512M)
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=ai-automation,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8018/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  ai-automation-ui:
    build:
      context: .
      dockerfile: services/ai-automation-ui/Dockerfile
    container_name: ai-automation-ui
    restart: unless-stopped
    ports:
      - "3001:80"
    depends_on:
      ai-automation-service:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
        labels: "service=ai-ui,environment=production"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

volumes:
  influxdb_data:
  influxdb_config:
  data_retention_backups:
  ha_ingestor_logs:
  sqlite-data:
  ai_automation_data:
  ai_automation_models:  # Phase 1: Persistent model cache (OpenVINO INT8 models)

networks:
  ha-ingestor-network:
    driver: bridge
