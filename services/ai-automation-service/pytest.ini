[pytest]
# Pytest Configuration for ai-automation-service

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Minimum version
minversion = 7.0

# Add current directory and parent to Python path
pythonpath = . ../..

# Test output options
addopts =
    -v
    --strict-markers
    --tb=short
    --disable-warnings
    # Coverage options
    --cov=src
    --cov-report=term-missing
    --cov-report=html:coverage_html
    --cov-report=xml:coverage.xml
    # Fail tests that use deprecated features
    --strict-config

# Markers for test categorization
markers =
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (may require external services)
    slow: Slow tests (>1 second)
    asyncio: Async tests
    requires_openai: Tests that require OpenAI API
    requires_ha: Tests that require Home Assistant connection
    requires_mqtt: Tests that require MQTT broker

# Asyncio configuration
asyncio_mode = auto

# Test paths
testpaths = tests

# Ignore paths
norecursedirs = 
    .git
    .tox
    dist
    build
    *.egg
    __pycache__
    .pytest_cache
    coverage_html

# Coverage settings
[coverage:run]
source = src
omit =
    */tests/*
    */__pycache__/*
    */site-packages/*
    */conftest.py

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstractmethod

