# HA Setup Service - Docker Compose Configuration
# Add this section to docker-compose.yml under the 'services:' section

  ha-setup-service:
    build:
      context: .
      dockerfile: services/ha-setup-service/Dockerfile
    container_name: ha-ingestor-setup-service
    restart: unless-stopped
    ports:
      - "8020:8020"  # Changed from 8010 (used by carbon-intensity)
    env_file:
      - infrastructure/.env.websocket  # Reuses existing HA_TOKEN
    environment:
      - SERVICE_NAME=ha-setup-service
      - SERVICE_PORT=8020
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - HA_URL=${HA_HTTP_URL:-http://192.168.1.86:8123}
      # HA_TOKEN loaded from infrastructure/.env.websocket
      - DATABASE_URL=sqlite+aiosqlite:///./data/ha-setup.db
      - DATA_API_URL=http://ha-ingestor-data-api:8006
      - ADMIN_API_URL=http://ha-ingestor-admin-api:8003
      - HEALTH_CHECK_INTERVAL=60
      - INTEGRATION_CHECK_INTERVAL=300
      - ENABLE_PERFORMANCE_MONITORING=true
      - PERFORMANCE_SAMPLE_INTERVAL=30
    volumes:
      - ha_setup_data:/app/data
      - ha_ingestor_logs:/var/log/ha-ingestor
    depends_on:
      data-api:
        condition: service_healthy
      admin-api:
        condition: service_healthy
    networks:
      - ha-ingestor-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8020/health')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 5s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        labels: "service=ha-setup-service,environment=production"

# Add this volume to the 'volumes:' section
volumes:
  ha_setup_data:
    driver: local

