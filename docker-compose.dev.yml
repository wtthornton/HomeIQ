version: '3.8'

services:
  influxdb:
    image: influxdb:2.7
    container_name: homeiq-influxdb-dev
    restart: unless-stopped
    ports:
      - "8086:8086"
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_USERNAME:-admin}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_PASSWORD:-admin123}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG:-homeiq}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_TOKEN:-homeiq-token}
      - TZ=America/Los_Angeles
    volumes:
      - influxdb_data_dev:/var/lib/influxdb2
      - influxdb_config_dev:/etc/influxdb2
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  websocket-ingestion:
    build:
      context: ./services/websocket-ingestion
      dockerfile: Dockerfile.dev
    container_name: homeiq-websocket-dev
    restart: unless-stopped
    command: ["python", "src/websocket_fallback_enhanced.py"]
    environment:
      - HOME_ASSISTANT_URL=http://ha-simulator:8123
      - HOME_ASSISTANT_TOKEN=dev_simulator_token
      - NABU_CASA_URL=https://lwzisze94hrpqde9typkwgu5pptxdkoh.ui.nabu.casa
      - NABU_CASA_TOKEN=${NABU_CASA_TOKEN}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-homeiq-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-homeiq}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - LOG_LEVEL=DEBUG
      - TZ=America/Los_Angeles
      - ENABLE_WEATHER_API=${ENABLE_WEATHER_API:-true}
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - WEATHER_SERVICE_URL=http://weather-api:8001
      - ENRICHMENT_SERVICE_URL=http://enrichment-pipeline:8002
    volumes:
      - ./services/websocket-ingestion:/app
      - ./shared:/app/shared
      - /app/__pycache__
    depends_on:
      influxdb:
        condition: service_healthy
      weather-api:
        condition: service_healthy
      enrichment-pipeline:
        condition: service_healthy
      ha-simulator:
        condition: service_healthy
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  enrichment-pipeline:
    build:
      context: .
      dockerfile: services/enrichment-pipeline/Dockerfile.dev
    container_name: homeiq-enrichment-dev
    restart: unless-stopped
    ports:
      - "8002:8002"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-homeiq-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-homeiq}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - LOG_LEVEL=DEBUG
    volumes:
      - ./services/enrichment-pipeline:/app
      - ./shared:/app/shared
      - /app/__pycache__
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  weather-api:
    build:
      context: ./services/weather-api
      dockerfile: Dockerfile.dev
    container_name: homeiq-weather-dev
    restart: unless-stopped
    environment:
      - WEATHER_API_KEY=${WEATHER_API_KEY}
      - WEATHER_API_URL=${WEATHER_API_URL:-https://api.openweathermap.org/data/2.5}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-homeiq-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-homeiq}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - LOG_LEVEL=DEBUG
    volumes:
      - ./services/weather-api:/app
      - ./shared:/app/shared
      - /app/__pycache__
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  admin-api:
    build:
      context: ./services/admin-api
      dockerfile: Dockerfile.dev
    container_name: homeiq-admin-dev
    restart: unless-stopped
    ports:
      - "8003:8004"
    environment:
      - LOG_LEVEL=INFO
      - API_HOST=0.0.0.0
      - API_PORT=8004
      - WEBSOCKET_INGESTION_URL=http://websocket-ingestion:8000
      - ENRICHMENT_PIPELINE_URL=http://enrichment-pipeline:8002
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-homeiq-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-homeiq}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - TZ=America/Los_Angeles
    command: ["python", "src/simple_main.py"]
    volumes:
      - ./services/admin-api:/app
      - /app/__pycache__
    depends_on:
      influxdb:
        condition: service_healthy
      websocket-ingestion:
        condition: service_healthy
      enrichment-pipeline:
        condition: service_healthy
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  data-retention:
    build:
      context: ./services/data-retention
      dockerfile: Dockerfile.dev
    container_name: homeiq-data-retention-dev
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_TOKEN:-homeiq-token}
      - INFLUXDB_ORG=${INFLUXDB_ORG:-homeiq}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET:-home_assistant_events}
      - LOG_LEVEL=DEBUG
      - CLEANUP_INTERVAL_HOURS=${CLEANUP_INTERVAL_HOURS:-24}
      - MONITORING_INTERVAL_MINUTES=${MONITORING_INTERVAL_MINUTES:-5}
      - COMPRESSION_INTERVAL_HOURS=${COMPRESSION_INTERVAL_HOURS:-24}
      - BACKUP_INTERVAL_HOURS=${BACKUP_INTERVAL_HOURS:-24}
      - BACKUP_DIR=${BACKUP_DIR:-/backups}
    volumes:
      - ./services/data-retention:/app
      - ./shared:/app/shared
      - /app/__pycache__
      - data_retention_backups_dev:/backups
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  health-dashboard:
    build:
      context: ./services/health-dashboard
      dockerfile: Dockerfile.dev
    container_name: homeiq-dashboard-dev
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=/api
    volumes:
      - ./services/health-dashboard:/app
      - /app/node_modules
    depends_on:
      influxdb:
        condition: service_healthy
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  ha-simulator:
    build:
      context: ./services/ha-simulator
      dockerfile: Dockerfile
    container_name: homeiq-simulator-dev
    restart: unless-stopped
    ports:
      - "8123:8123"
    environment:
      - SIMULATOR_PORT=8123
      - SIMULATOR_AUTH_TOKEN=dev_simulator_token
      - SIMULATOR_HA_VERSION=2025.10.1
      - SIMULATOR_LOG_LEVEL=INFO
      - TZ=America/Los_Angeles
    volumes:
      - ./services/ha-simulator/config:/app/config
      - ./services/ha-simulator/data:/app/data
    networks:
      - homeiq-network-dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8123/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  influxdb_data_dev:
  influxdb_config_dev:
  data_retention_backups_dev:

networks:
  homeiq-network-dev:
    driver: bridge
